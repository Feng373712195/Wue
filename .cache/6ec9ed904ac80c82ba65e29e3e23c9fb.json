{"dependencies":[{"name":"C:\\Users\\feng\\Desktop\\Apptest\\Wue\\node_modules\\virtual-dom\\node_modules\\browser-split\\package.json","includedInParent":true,"mtime":1530352006182},{"name":"C:\\Users\\feng\\Desktop\\Apptest\\Wue\\package.json","includedInParent":true,"mtime":1531038818355}],"generated":{"js":"/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * ECMAScript compliant, uniform cross-browser split method\n */\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * split('a b c d', ' ');\n * // -> ['a', 'b', 'c', 'd']\n *\n * // With limit\n * split('a b c d', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n */\nmodule.exports = (function split(undef) {\n\n  var nativeSplit = String.prototype.split,\n    compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n    // NPCG: nonparticipating capturing group\n    self;\n\n  self = function(str, separator, limit) {\n    // If `separator` is not a regex, use `nativeSplit`\n    if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n      return nativeSplit.call(str, separator, limit);\n    }\n    var output = [],\n      flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + // Proposed for ES6\n      (separator.sticky ? \"y\" : \"\"),\n      // Firefox 3+\n      lastLastIndex = 0,\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator = new RegExp(separator.source, flags + \"g\"),\n      separator2, match, lastIndex, lastLength;\n    str += \"\"; // Type-convert\n    if (!compliantExecNpcg) {\n      // Doesn't need flags gy, but they don't hurt\n      separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n    }\n    /* Values for `limit`, per the spec:\n     * If undefined: 4294967295 // Math.pow(2, 32) - 1\n     * If 0, Infinity, or NaN: 0\n     * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n     * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n     * If other: Type-convert, then use the above rules\n     */\n    limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n    limit >>> 0; // ToUint32(limit)\n    while (match = separator.exec(str)) {\n      // `separator.lastIndex` is not reliable cross-browser\n      lastIndex = match.index + match[0].length;\n      if (lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index));\n        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n        // nonparticipating capturing groups\n        if (!compliantExecNpcg && match.length > 1) {\n          match[0].replace(separator2, function() {\n            for (var i = 1; i < arguments.length - 2; i++) {\n              if (arguments[i] === undef) {\n                match[i] = undef;\n              }\n            }\n          });\n        }\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1));\n        }\n        lastLength = match[0].length;\n        lastLastIndex = lastIndex;\n        if (output.length >= limit) {\n          break;\n        }\n      }\n      if (separator.lastIndex === match.index) {\n        separator.lastIndex++; // Avoid an infinite loop\n      }\n    }\n    if (lastLastIndex === str.length) {\n      if (lastLength || !separator.test(\"\")) {\n        output.push(\"\");\n      }\n    } else {\n      output.push(str.slice(lastLastIndex));\n    }\n    return output.length > limit ? output.slice(0, limit) : output;\n  };\n\n  return self;\n})();\n","map":{"mappings":[{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"..\\..\\node_modules\\virtual-dom\\node_modules\\browser-split\\index.js":"/*!\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n * ECMAScript compliant, uniform cross-browser split method\n */\n\n/**\n * Splits a string into an array of strings using a regex or string separator. Matches of the\n * separator are not included in the result array. However, if `separator` is a regex that contains\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\n * cross-browser.\n * @param {String} str String to split.\n * @param {RegExp|String} separator Regex or string to use for separating the string.\n * @param {Number} [limit] Maximum number of items to include in the result array.\n * @returns {Array} Array of substrings.\n * @example\n *\n * // Basic use\n * split('a b c d', ' ');\n * // -> ['a', 'b', 'c', 'd']\n *\n * // With limit\n * split('a b c d', ' ', 2);\n * // -> ['a', 'b']\n *\n * // Backreferences in result array\n * split('..word1 word2..', /([a-z]+)(\\d+)/i);\n * // -> ['..', 'word', '1', ' ', 'word', '2', '..']\n */\nmodule.exports = (function split(undef) {\n\n  var nativeSplit = String.prototype.split,\n    compliantExecNpcg = /()??/.exec(\"\")[1] === undef,\n    // NPCG: nonparticipating capturing group\n    self;\n\n  self = function(str, separator, limit) {\n    // If `separator` is not a regex, use `nativeSplit`\n    if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n      return nativeSplit.call(str, separator, limit);\n    }\n    var output = [],\n      flags = (separator.ignoreCase ? \"i\" : \"\") + (separator.multiline ? \"m\" : \"\") + (separator.extended ? \"x\" : \"\") + // Proposed for ES6\n      (separator.sticky ? \"y\" : \"\"),\n      // Firefox 3+\n      lastLastIndex = 0,\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      separator = new RegExp(separator.source, flags + \"g\"),\n      separator2, match, lastIndex, lastLength;\n    str += \"\"; // Type-convert\n    if (!compliantExecNpcg) {\n      // Doesn't need flags gy, but they don't hurt\n      separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n    }\n    /* Values for `limit`, per the spec:\n     * If undefined: 4294967295 // Math.pow(2, 32) - 1\n     * If 0, Infinity, or NaN: 0\n     * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n     * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n     * If other: Type-convert, then use the above rules\n     */\n    limit = limit === undef ? -1 >>> 0 : // Math.pow(2, 32) - 1\n    limit >>> 0; // ToUint32(limit)\n    while (match = separator.exec(str)) {\n      // `separator.lastIndex` is not reliable cross-browser\n      lastIndex = match.index + match[0].length;\n      if (lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index));\n        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n        // nonparticipating capturing groups\n        if (!compliantExecNpcg && match.length > 1) {\n          match[0].replace(separator2, function() {\n            for (var i = 1; i < arguments.length - 2; i++) {\n              if (arguments[i] === undef) {\n                match[i] = undef;\n              }\n            }\n          });\n        }\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1));\n        }\n        lastLength = match[0].length;\n        lastLastIndex = lastIndex;\n        if (output.length >= limit) {\n          break;\n        }\n      }\n      if (separator.lastIndex === match.index) {\n        separator.lastIndex++; // Avoid an infinite loop\n      }\n    }\n    if (lastLastIndex === str.length) {\n      if (lastLength || !separator.test(\"\")) {\n        output.push(\"\");\n      }\n    } else {\n      output.push(str.slice(lastLastIndex));\n    }\n    return output.length > limit ? output.slice(0, limit) : output;\n  };\n\n  return self;\n})();\n"},"lineCount":107}},"hash":"c45b0a8ad7a39e5bf5d25318dbbe1188","cacheData":{"env":{}},"id":96}